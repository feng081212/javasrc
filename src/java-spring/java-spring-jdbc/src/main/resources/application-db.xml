<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans.xsd
	 	   	http://www.springframework.org/schema/tx 
	 	   	http://www.springframework.org/schema/tx/spring-tx.xsd 
	 	   	http://www.springframework.org/schema/aop 
	 	   	http://www.springframework.org/schema/aop/spring-aop.xsd 
           	http://www.springframework.org/schema/context 
           	http://www.springframework.org/schema/context/spring-context.xsd">
	
	
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="locations">
            <list>  
                 <value>classpath:db.properties</value> 
            </list>
        </property>
    </bean>
	
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${${db.core.prefix}.jdbc.driverClass}"/>
		<property name="jdbcUrl" value="${${db.core.prefix}.jdbc.url}"/>
		<property name="user" value="${${db.core.prefix}.jdbc.user}"/>
		<property name="password" value="${${db.core.prefix}.jdbc.password}"/>
		<property name="minPoolSize" value="${${db.core.prefix}.jdbc.minPoolSize}"/>
		<property name="maxPoolSize" value="${${db.core.prefix}.jdbc.maxPoolSize}"/>
		<property name="initialPoolSize" value="${${db.core.prefix}.jdbc.initialPoolSize}"/>
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="${${db.core.prefix}.jdbc.maxIdleTime}"/>
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="${${db.core.prefix}.jdbc.acquireIncrement}"/>
		<!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements
			属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。
			如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0-->
		<property name="maxStatements" value="${${db.core.prefix}.jdbc.maxStatements}"/>
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="${${db.core.prefix}.jdbc.idleConnectionTestPeriod}"/>
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="${${db.core.prefix}.jdbc.acquireRetryAttempts}"/>
		<!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效
			保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试
			获取连接失败后该数据源将申明已断开并永久关闭。Default: false-->
		<property name="breakAfterAcquireFailure" value="${${db.core.prefix}.jdbc.breakAfterAcquireFailure}"/>
		<!--因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的
			时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable
			等方法来提升连接测试的性能。Default: false -->
		<property name="testConnectionOnCheckout" value="${${db.core.prefix}.jdbc.testConnectionOnCheckout}"/>
	</bean>
	
	<!-- 事务配置 -->
	<tx:annotation-driven transaction-manager="coreTxManager" />
    <bean id="coreTxManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="dbDao" class="com.db.jdbc.DefaultDBDao">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<bean id="springDBDao" class="com.spring.db.jdbc.SpringDBDao">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
    		
</beans>


